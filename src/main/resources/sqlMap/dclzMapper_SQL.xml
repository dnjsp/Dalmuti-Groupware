<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="kr.or.ddit.dclz.mapper.DclzMapper">
	<resultMap type="dclzVO" id="dclzMap">
	<id column="DCLZ_SN" property="dclzSn"/> <!-- id : pk 멤버변수 -->
	<result column="EMP_NO" property="empNo"/> <!-- pk이외의 멤버변수 -->
	<result column="WORK_DE" property="workDe"/>
	<result column="ATTEND_TIME" property="attendTime"/>
	<result column="LVFFC_TIME" property="lvffcTime"/>
	<result column="WORK_TIME" property="workTime"/>
	<result column="ATTEND_IP" property="attendIp"/>
	<result column="LVFFC_IP" property="lvffcIp"/>
	<result column="WORK_STLE_CODE" property="workStleCode"/>
		<association javaType="empVO" property="empVO" >
			<id column="EMP_NO" property="empNo"/>
			<result column="EMP_NM" property="empNm"/>
			<result column="DEPT_CODE" property="deptCode"/>
			<result column="CLSF_CODE" property="clsfCode"/>
		</association> <!-- association 1:1 collection 1:다 -->
	</resultMap>
	
	<resultMap type="bsrpVO" id="bsrpMap">
		<result column="BSRP_CN" property="bsrpCn" 
			jdbcType="CLOB" javaType="java.lang.String" /> 
	</resultMap>
	
	<!-- 나의 근태 등록 (출근) -->
	<insert id="commuteInsert" parameterType="hashMap">
		<selectKey order="BEFORE" resultType="int" keyProperty="dclzSn">
 			SELECT NVL(MAX(TO_NUMBER(DCLZ_SN)),0)+1 FROM DCLZ
 		</selectKey>
 		INSERT INTO DCLZ
 			(DCLZ_SN,EMP_NO,WORK_DE,ATTEND_TIME,
 			 ATTEND_IP,LVFFC_IP,WORK_STLE_CODE)
		VALUES(#{dclzSn},#{empNo},#{workDe},SYSDATE,
			#{attendIp},'-',#{workStleCode})
	</insert>	
	
	<!-- 나의 근태 등록 (퇴근) -->
	<update id="getoff" parameterType="hashMap">
 		<selectKey order = "BEFORE" resultType="int" keyProperty="workTime">
 			SELECT ROUND((TRUNC(#{lvffcTime},'MI') - ATTEND_TIME)*24,2) FROM DCLZ WHERE DCLZ_SN = #{dclzSn}
 		</selectKey>
		UPDATE DCLZ
 		SET 
 			LVFFC_TIME = #{lvffcTime},
 			WORK_TIME = #{workTime},
 			LVFFC_IP = #{lvffcIp}
 		WHERE DCLZ_SN = #{dclzSn}
	</update>
	
	
	<!-- 나의 근태현황 목록 조회-->
	<select id="selectDclzList" parameterType="hashMap" resultType="hashMap">
		SELECT
		  		TO_CHAR(TO_DATE(A.WORK_DE),'yyyy-MM-dd') as work_de, 
				A.EMP_NO, B.EMP_NM,fn_getworkstle(work_stle_code) as work_stle_code, 
				TO_CHAR(A.ATTEND_TIME, 'yyyy-MM-dd HH24:mi') as ATTEND_TIME, 
				TO_CHAR(A.LVFFC_TIME, 'yyyy-MM-dd HH24:mi') as LVFFC_TIME, 
				A.ATTEND_IP, A.LVFFC_IP, A.WORK_TIME 
		FROM DCLZ A, EMP B 
		WHERE A.EMP_NO=B.EMP_NO
		AND A.EMP_NO=#{empNo}
		AND SUBSTR(WORK_DE,1,7)=#{searchMonth}
		ORDER BY WORK_DE

	</select>
	
	<!-- 나의 근태현황 목록 개수 조회 -->
	<select id="dclzListCount" parameterType="hashMap" resultType="int">
		SELECT COUNT(*)
		FROM DCLZ
		WHERE EMP_NO = #{empNo}
		AND SUBSTR(WORK_DE,1,7)=#{searchMonth}
	</select>
	
	<!-- 나의 근태현황 주차별 합계 -->
	<select id="weekSelectDclz" parameterType="hashMap" resultType="hashMap">
	SELECT TO_CHAR(TRUNC(TO_DATE(WORK_DE),'D'),'YYYY-MM-DD') START_DATE,
       	   TO_CHAR(TRUNC(TO_DATE(WORK_DE),'D')+6,'YYYY-MM-DD') END_DATE,
           EMP_NO,
       	   SUM(WORK_TIME) AS TIMETOTAL
	FROM DCLZ A,(SELECT
      				WORK_DE B_DAY,
            		TO_CHAR(TRUNC(TO_DATE(WORK_DE),'D'),'YYYY-MM-DD') AS START_DATE, 
            		TO_CHAR(TRUNC(TO_DATE(WORK_DE),'D')+6,'YYYY-MM-DD') AS END_DATE  
        			FROM DUAL, DCLZ
                    WHERE (TO_CHAR(TRUNC(TO_DATE(WORK_DE),'D'),'YYYY-MM') = #{searchMonth}
                    OR TO_CHAR(TRUNC(TO_DATE(WORK_DE),'D')+6,'YYYY-MM') = #{searchMonth})
                    AND EMP_NO= #{empNo}
        			ORDER BY WORK_DE ) B
	WHERE TO_CHAR(TRUNC(TO_DATE(WORK_DE),'D'),'YYYY-MM-DD') = B.START_DATE
	AND TO_CHAR(TRUNC(TO_DATE(WORK_DE),'D')+6,'YYYY-MM-DD') = B.END_DATE
	AND A.WORK_DE = B.B_DAY
	GROUP BY TO_CHAR(TRUNC(TO_DATE(WORK_DE),'D'),'YYYY-MM-DD'),TO_CHAR(TRUNC(TO_DATE(WORK_DE),'D')+6,'YYYY-MM-DD'),EMP_NO
    HAVING EMP_NO=#{empNo}
	ORDER BY START_DATE
	</select>
	
	<!-- 나의 근태현황 기간으로 검색  -->
	<select id="searchDclzList" parameterType="hashMap" resultType="hashMap">
		<![CDATA[
		SELECT 
            ROW_NUMBER() OVER (ORDER BY WORK_DE) AS RNUM,
            TO_CHAR(TO_DATE(A.WORK_DE),'YYYY-MM-DD') as work_de, 
            A.EMP_NO, B.EMP_NM,fn_getworkstle(work_stle_code) as work_stle_code, 
            TO_CHAR(A.ATTEND_TIME, 'YYYY-MM-DD HH24:MI') as ATTEND_TIME, 
            TO_CHAR(A.LVFFC_TIME, 'YYYY-MM-DD HH24:MI') as LVFFC_TIME, 
            A.ATTEND_IP, A.LVFFC_IP, A.WORK_TIME 
        FROM DCLZ A, EMP B 
        WHERE A.EMP_NO=B.EMP_NO
        AND A.EMP_NO=#{empNo}
        AND TO_DATE(WORK_DE) >= TO_DATE(#{searchStart},'YYYY-MM-DD')
        AND TO_DATE(WORK_DE) < TO_DATE(#{searchEnd},'YYYY-MM-DD')+1
		]]>
	</select>
	
	<!-- 나의 근태현황 기간으로 검색 결과 수 -->
	<select id="searchDclzListCount" parameterType="hashMap" resultType="hashMap">
		<![CDATA[
		SELECT COUNT(*)
		FROM DCLZ A, EMP B
		WHERE 1=1
		AND A.EMP_NO=B.EMP_NO
		AND A.EMP_NO=#{empNo}
		AND TO_DATE(WORK_DE) >= TO_DATE(#{searchStart},'YYYY-MM-DD')
		AND TO_DATE(WORK_DE) < TO_DATE(#{searchEnd},'YYYY-MM-DD')+1
		ORDER BY WORK_DE
		]]>
	</select>
	
	<!-- 휴일 목록 조회 -->
	<select id="restDeList" parameterType="hashMap" resultType="hashMap">
	 SELECT T.*
		FROM (SELECT
            ROW_NUMBER() OVER (ORDER BY A.RESTDE_DE ASC) AS RNUM,
            A.RESTDE_SN, A.RESTDE_DE, A.DFK_SE, B.CODE_NM, A.RESTDE_NM
            FROM RESTDE A, CMMNCODE B
            WHERE A.RESTDE_SE_CODE = B.CODE
            AND SUBSTR(RESTDE_DE,1,4)=#{searchYear}
            AND NOT A.RESTDE_SE_CODE='R1') T
		WHERE T.RNUM BETWEEN #{currentPage} * 10 - 9 AND #{currentPage} * 10
	</select>
	
	<!-- 휴일현황 목록 개수 조회 -->
	<select id="restDeCount" parameterType="hashMap" resultType="int">
		SELECT
            COUNT(*)
            FROM RESTDE A, CMMNCODE B
            WHERE A.RESTDE_SE_CODE = B.CODE
            AND SUBSTR(RESTDE_DE,1,4)=#{searchYear}
            AND NOT A.RESTDE_SE_CODE='R1'
	</select>
	
	<!-- 휴일 등록 -->
	<insert id="restDeInsert" parameterType="restdeVO">
	INSERT INTO RESTDE
		  (RESTDE_SN, RESTDE_DE, DFK_SE, RESTDE_SE_CODE, RESTDE_NM)
    VALUES(
        (SELECT NVL(MAX(TO_NUMBER(RESTDE_SN)),0)+1 FROM RESTDE)
        ,#{restdeDe},(SELECT TO_CHAR(TO_DATE(#{restdeDe}),'DY')FROM DUAL)
        ,#{restdeSeCode},#{restdeNm})
	</insert>
	
	<!-- 휴일 삭제 -->
	<delete id="restDeDelete" parameterType="String">
		DELETE FROM RESTDE WHERE RESTDE_SN=#{restdeSn}
	</delete>
	
	<!-- 출장 임시 저장 -->
 	<insert id="bsrpInsert" parameterType="hashMap">
 		<selectKey order="BEFORE" resultType="int" keyProperty="bsrpSn">
 			SELECT NVL(MAX(TO_NUMBER(BSRP_SN)),0)+1 FROM BSRP
 		</selectKey>
 		INSERT INTO BSRP
 			(BSRP_SN,EMP_NO,REQSTDOC_SJ,BGN_DE,END_DE,BSRP_PRVONSH,
 			 BSRP_PLACE,REQST_DE,BSRP_CN,SANCTN_YN)
		VALUES(#{bsrpSn},#{empNo},#{reqstdocSj},#{bgnDe},
			  #{endDe},#{bsrpPrvonsh},#{bsrpPlace},SYSDATE,#{bsrpCn},'N')
 	</insert>
 	
 	<!-- 출장신청 임시저장 목록조회 -->
 	<select id="bsrpList" parameterType="hashMap" resultType="hashMap">
 		SELECT T.*
		FROM (SELECT 
			   ROW_NUMBER() OVER (ORDER BY BGN_DE DESC) AS RNUM,
			   BSRP_SN,REQSTDOC_SJ,EMP_NO,BGN_DE,END_DE,BSRP_PLACE,
 			   TO_CHAR(REQST_DE, 'yyyy-MM-dd HH24:mi') as REQST_DE, SANCTN_YN, ELCTRN_SANCTN_SN
		FROM BSRP
		WHERE EMP_NO=#{empNo}) T
		WHERE T.RNUM BETWEEN #{currentPage} * 10 - 9 AND #{currentPage} * 10
 	</select>
 	
 	<!-- 출장신청 임시저장 목록조회 수  -->
	<select id="bsrpListCount" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM BSRP
		WHERE EMP_NO=#{empNo}
	</select>
 	
 	<!-- 출장신청 임시저장 삭제 -->
 	<delete id="bsrpDelete" parameterType="String">
 		DELETE FROM BSRP WHERE BSRP_SN=#{bsrpSn}
 	</delete>
 	
 	<!-- 출장신청 임시저장함 상세조회 -->
 	<select id="bsrpDetail" parameterType="String" resultMap="bsrpMap">
 		SELECT BSRP_SN,EMP_NO,REQSTDOC_SJ,BGN_DE,END_DE,
 			   BSRP_PRVONSH,BSRP_PLACE,REQST_DE,BSRP_CN,SANCTN_YN,ELCTRN_SANCTN_SN
		FROM BSRP
		WHERE BSRP_SN=#{bsrpSn}
 	</select>
 	
 	<!-- 출장신청 임시저장함 수정 -->
 	<update id="bsrpUpdate" parameterType="hashMap">
 		UPDATE BSRP
 		SET 
 			BGN_DE = #{bgnDe},
 			END_DE = #{endDe},
 			REQSTDOC_SJ = #{reqstdocSj},
 			BSRP_PRVONSH = #{bsrpPrvonsh},
 			BSRP_PLACE = #{bsrpPlace},
 			REQST_DE = SYSDATE,
 			BSRP_CN = #{bsrpCn}
 		WHERE BSRP_SN = #{bsrpSn}
 	</update>
 	
 	<!-- 출장신청 임시저장함 검색 -->
 	<select id="searchBsrpPage" resultType="hashMap" parameterType="hashMap">
 	 SELECT T.*
		FROM (SELECT BSRP_SN,
               ROW_NUMBER() OVER (ORDER BY BGN_DE) AS RNUM,
 			   REQSTDOC_SJ,
 			   EMP_NO,
 			   BGN_DE,
 			   END_DE,
 			   BSRP_PLACE,
 			   SANCTN_YN,
 			   ELCTRN_SANCTN_SN,
 			   TO_CHAR(REQST_DE, 'yyyy-MM-dd HH24:mi') as REQST_DE
		FROM BSRP
		WHERE EMP_NO=#{empNo}
		
		<choose>
			<when test="filter == 'sj'">AND REQSTDOC_SJ LIKE '%' || #{keyword} || '%'</when> 
 			<when test="filter == 'cn'">AND BSRP_CN LIKE '%' || #{keyword} || '%'</when>
 			<when test="filter == 'place'">AND BSRP_PLACE LIKE '%' || #{keyword} || '%'</when>
		</choose>
																										) T
		WHERE T.RNUM BETWEEN #{currentPage} * 10 - 9 AND #{currentPage} * 10
 		ORDER BY BGN_DE DESC
 	</select>
 	
 	<!--  출장신청 임시저장함 검색 수 조회  -->
 	<select id="searchBsrpCount" parameterType="hashMap" resultType="int">
 	SELECT COUNT(*)
		FROM BSRP
		WHERE EMP_NO=#{empNo}
		<choose>
			<when test="filter == 'sj'">AND REQSTDOC_SJ LIKE '%' || #{keyword} || '%'</when> 
 			<when test="filter == 'cn'">AND BSRP_CN LIKE '%' || #{keyword} || '%'</when>
 			<when test="filter == 'place'">AND BSRP_PLACE LIKE '%' || #{keyword} || '%'</when>
		</choose>
 	</select>
 	
 	<!-- 휴가신청 폼 휴가일수 조회 -->
 	<select id="yrycSelect" resultType="yrycVO" parameterType="hashMap" >
	SELECT OCCRRNC_YEAR,
		   OCCRRNC_DAYCNT,
		   USE_DAYCNT,
		   REMNDR_DAYCNT,
	       EMP_NO
		   FROM YRYC
	WHERE OCCRRNC_YEAR = #{searchYear}
	AND EMP_NO=#{empNo}
 	</select>
 	
 	<!-- 휴가신청 임시저장 -->
 	<insert id="vcatnInsert" parameterType="hashMap">
 		<selectKey order="BEFORE" resultType="int" keyProperty="vcatnSn">
 			SELECT NVL(MAX(TO_NUMBER(VCATN_SN)),0)+1 FROM VCATN
 		</selectKey>
 		INSERT INTO VCATN
 			(VCATN_SN,EMP_NO,REQSTDOC_SJ,BGN_DE,END_DE,VCATN_PRVONSH,
 			 VCATN_SE_CODE,REQST_DE,VCATN_REQST_DAYCNT,SANCTN_YN)
		VALUES(#{vcatnSn},#{empNo},#{reqstdocSj},#{bgnDe},
			  #{endDe},#{vcatnPrvonsh},#{vcatnSeCode},SYSDATE,#{vcatnReqstDaycnt},'N')
 	</insert>
 	
 	<!-- 휴가신청 임시저장 목록조회 -->
 	<select id="vcatnList" parameterType="hashMap" resultType="hashMap">
		SELECT T.*
		FROM (SELECT 
			   ROW_NUMBER() OVER (ORDER BY BGN_DE) AS RNUM,
			   VCATN_SN,EMP_NO,REQSTDOC_SJ,BGN_DE,END_DE,VCATN_PRVONSH,
 			   FN_GETVCATNSE(VCATN_SE_CODE) AS VCATN_SE_CODE,
 			   VCATN_REQST_DAYCNT,SANCTN_YN,
 			   TO_CHAR(REQST_DE, 'yyyy-MM-dd HH24:mi') as REQST_DE,
 			   ELCTRN_SANCTN_SN
		FROM VCATN
		WHERE EMP_NO=#{empNo}) T
		WHERE T.RNUM BETWEEN #{currentPage} * 10 - 9 AND #{currentPage} * 10
		ORDER BY BGN_DE DESC
 	</select>
 	
 	<!-- 출장신청 임시저장 목록조회 수  -->
	<select id="vcatnListCount" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM VCATN
		WHERE EMP_NO=#{empNo}
	</select>
 	
 	<!-- 휴가신청 임시저장 삭제 -->
 	<delete id="vcatnDelete" parameterType="String">
 		DELETE FROM VCATN WHERE VCATN_SN=#{vcatnSn}
 	</delete>
 	
 	<!-- 휴가신청 임시저장함 검색 -->
 	<select id="searchVcatnPage" resultType="hashMap" parameterType="hashMap">
 	SELECT T.*
    FROM (SELECT VCATN_SN,
	               ROW_NUMBER() OVER (ORDER BY BGN_DE) AS RNUM,
	 			   EMP_NO,
	 			   REQSTDOC_SJ,
	 			   BGN_DE,
	 			   END_DE,
	 			   VCATN_PRVONSH,
	 			   FN_GETVCATNSE(VCATN_SE_CODE) AS VCATN_SE_CODE,
	 			   VCATN_REQST_DAYCNT,
	 			   SANCTN_YN,
	 			   TO_CHAR(REQST_DE, 'yyyy-MM-dd HH24:mi') as REQST_DE,
	               ELCTRN_SANCTN_SN
			FROM VCATN
			WHERE EMP_NO=#{empNo}
		<choose>
			<when test="filter == 'sj'">AND REQSTDOC_SJ LIKE '%' || #{keyword} || '%'</when> 
 			<when test="filter == 'cn'">AND VCATN_PRVONSH LIKE '%' || #{keyword} || '%'</when>
		</choose>
        																								) T
		WHERE T.RNUM BETWEEN #{currentPage} * 10 - 9 AND #{currentPage} * 10
		ORDER BY BGN_DE DESC
 	</select>
 	
 	<!--  휴가신청 임시저장함 검색 수 조회  -->
 	<select id="searchVcatnCn" parameterType="hashMap" resultType="int">
 	SELECT COUNT(*)
		FROM VCATN
			WHERE EMP_NO=#{empNo}
		<choose>
			<when test="filter == 'sj'">AND REQSTDOC_SJ LIKE '%' || #{keyword} || '%'</when> 
 			<when test="filter == 'cn'">AND VCATN_PRVONSH LIKE '%' || #{keyword} || '%'</when>
		</choose>
 	</select>

	<!-- 휴가신청 임시저장함 상세조회 -->
 	<select id="vcatnDetail" parameterType="String" resultType="vcatnVO">
 		SELECT VCATN_SN,EMP_NO,REQSTDOC_SJ,BGN_DE,END_DE,VCATN_PRVONSH,
 			   FN_GETVCATNSE(VCATN_SE_CODE) AS VCATN_SE_CODE,
 			   VCATN_REQST_DAYCNT,SANCTN_YN,ELCTRN_SANCTN_SN,
 			   TO_CHAR(REQST_DE, 'yyyy-MM-dd HH24:mi') as REQST_DE
		FROM VCATN
		WHERE VCATN_SN=#{vcatnSn}
 	</select>
 	
 	<!-- 출장신청 임시저장함 수정 -->
 	<update id="vcatnUpdate" parameterType="hashMap">
 		UPDATE VCATN
 		SET 
 			REQSTDOC_SJ = #{reqstdocSj},
 			BGN_DE = #{bgnDe},
 			END_DE = #{endDe},
 			VCATN_PRVONSH = #{vcatnPrvonsh},
 			VCATN_SE_CODE = #{vcatnSeCode},
 			REQST_DE = SYSDATE,
 			VCATN_REQST_DAYCNT= #{vcatnReqstDaycnt}
 		WHERE VCATN_SN = #{vcatnSn}
 	</update>
 	
 	<!-- 관리자 휴가관리 전체목록 조회 -->
 	<select id="vcatnadmin" resultType="hashMap" parameterType="hashMap">
 	SELECT T.*
		FROM 
			(SELECT 
	            ROW_NUMBER() OVER (ORDER BY CLSF_CODE, A.EMP_NO) AS RNUM,
	            A.EMP_NO EMP_NO,
	            B.DEPT_NM DEPT_NM,
	            A.EMP_NM EMP_NM,
	            FN_GETCLSF(A.CLSF_CODE) CLSF,
                D.OCCRRNC_DAYCNT,
                D.USE_DAYCNT,
                D.REMNDR_DAYCNT,
	            ENCPN_DE
	        FROM EMP A, DEPT B, CMMNCODE C, YRYC D
	        WHERE 1=1
	          AND OCCRRNC_YEAR = #{currentYear}
	          AND A.DEPT_CODE = B.DEPT_CODE
	          AND FN_GETCLSF(A.CLSF_CODE) = C.CODE_NM
              AND A.EMP_NO = D.EMP_NO(+)
	          AND RETIRE_DE IS NULL
	        ORDER BY CLSF_CODE, A.EMP_NO) T
		WHERE T.RNUM BETWEEN #{currentPage}*10-9 AND #{currentPage}*10
 	</select>
 	
 	<!-- 관리자 근태관리 전체목록 조회 -->
 	<select id="dclzadminSelect" resultType="hashMap" parameterType="hashMap">
 	SELECT T.*
		FROM 
			(SELECT 
	            ROW_NUMBER() OVER (ORDER BY CLSF_CODE, A.EMP_NO) AS RNUM,
	            A.EMP_NO EMP_NO,
	            B.DEPT_NM DEPT_NM,
	            A.EMP_NM EMP_NM,
	            FN_GETCLSF(A.CLSF_CODE) CLSF,
	            ENCPN_DE
	        FROM EMP A, DEPT B, CMMNCODE C
	        WHERE 1=1
	          AND A.DEPT_CODE = B.DEPT_CODE
	          AND FN_GETCLSF(A.CLSF_CODE) = C.CODE_NM
	          AND RETIRE_DE IS NULL
	        ORDER BY CLSF_CODE, A.EMP_NO) T
		WHERE T.RNUM BETWEEN #{currentPage}*10-9 AND #{currentPage}*10
 	</select>
 	
 	<!-- 관리자 휴가관리 전체목록 검색 -->
 	<select id="vcatnadminSearch" resultType="hashMap" parameterType="hashMap">
 	SELECT T.*
		FROM 
			(SELECT 
	            ROW_NUMBER() OVER (ORDER BY CLSF_CODE, A.EMP_NO) AS RNUM,
	            A.EMP_NO EMP_NO,
	            B.DEPT_NM DEPT_NM,
	            A.EMP_NM EMP_NM,
	            FN_GETCLSF(A.CLSF_CODE) CLSF,
                D.OCCRRNC_DAYCNT,
                D.USE_DAYCNT,
                D.REMNDR_DAYCNT,
	            ENCPN_DE
	        FROM EMP A, DEPT B, CMMNCODE C, YRYC D
	        WHERE 1=1
	       	  AND OCCRRNC_YEAR = #{currentYear}
	          AND A.DEPT_CODE = B.DEPT_CODE
	          AND FN_GETCLSF(A.CLSF_CODE) = C.CODE_NM
              AND A.EMP_NO = D.EMP_NO(+)
	          AND RETIRE_DE IS NULL
	          AND EMP_NM LIKE '%'||#{keyword}||'%'
	        ORDER BY CLSF_CODE, A.EMP_NO) T
		WHERE T.RNUM BETWEEN #{currentPage}*10-9 AND #{currentPage}*10
 	</select>
 	
 	<!-- 관리자 휴가관리 직원목록 검색 결과 수  -->
	<select id="searchVcatnCount" resultType="int" parameterType="hashMap">
		SELECT 
	        count(*)
        FROM EMP A, DEPT B, CMMNCODE C, YRYC D
        WHERE 1=1
          AND OCCRRNC_YEAR = #{currentYear}
          AND A.DEPT_CODE = B.DEPT_CODE
          AND FN_GETCLSF(A.CLSF_CODE) = C.CODE_NM
          AND A.EMP_NO = D.EMP_NO(+)
          AND RETIRE_DE IS NULL
          AND EMP_NM LIKE '%'||#{keyword}||'%'
        ORDER BY CLSF_CODE, A.EMP_NO
	</select>
	
	<!--  관리자 휴가관리 부서 직원목록  -->
	<select id="vcatnSelectByDept" resultType="hashMap" parameterType="hashMap">
		SELECT T.*
		FROM 
			(SELECT 
	            ROW_NUMBER() OVER (ORDER BY CLSF_CODE, A.EMP_NO) AS RNUM,
	            A.EMP_NO EMP_NO,
	            B.DEPT_NM DEPT_NM,
	            A.EMP_NM EMP_NM,
	            FN_GETCLSF(A.CLSF_CODE) CLSF,
                D.OCCRRNC_DAYCNT,
                D.USE_DAYCNT,
                D.REMNDR_DAYCNT,
	            ENCPN_DE
	        FROM EMP A, DEPT B, CMMNCODE C, YRYC D
	        WHERE 1=1
	       	  AND OCCRRNC_YEAR = #{currentYear}
	          AND A.DEPT_CODE = B.DEPT_CODE
	          AND FN_GETCLSF(A.CLSF_CODE) = C.CODE_NM
              AND A.EMP_NO = D.EMP_NO(+)
              AND (A.DEPT_CODE = #{dept} OR A.DEPT_CODE = #{team})
	          AND RETIRE_DE IS NULL
	        ORDER BY CLSF_CODE, A.EMP_NO) T
		WHERE T.RNUM BETWEEN #{currentPage}*10-9 AND #{currentPage}*10
	</select>
	
	<!--  관리자 근태관리 부서 직원목록  -->
	<select id="dclzSelectByDept" resultType="hashMap" parameterType="hashMap">
		SELECT T.*
		FROM 
			(SELECT 
	            ROW_NUMBER() OVER (ORDER BY CLSF_CODE, A.EMP_NO) AS RNUM,
	            A.EMP_NO EMP_NO,
	            B.DEPT_NM DEPT_NM,
	            A.EMP_NM EMP_NM,
	            FN_GETCLSF(A.CLSF_CODE) CLSF,
	            ENCPN_DE
	        FROM EMP A, DEPT B, CMMNCODE C
	        WHERE 1=1
	          AND A.DEPT_CODE = B.DEPT_CODE
	          AND FN_GETCLSF(A.CLSF_CODE) = C.CODE_NM
              AND (A.DEPT_CODE = #{dept} OR A.DEPT_CODE = #{team})
	          AND RETIRE_DE IS NULL
	        ORDER BY CLSF_CODE, A.EMP_NO) T
		WHERE T.RNUM BETWEEN #{currentPage}*10-9 AND #{currentPage}*10
	</select>
	
	<!--  관리자 휴가관리 부서 직원목록 구분 결과 수  -->
	<select id="vcatnSelectByDeptCount" resultType="int" parameterType="hashMap">
		SELECT 
	        count(*)
        FROM EMP A, DEPT B, CMMNCODE C, YRYC D
        WHERE 1=1
          AND OCCRRNC_YEAR = #{currentYear}
          AND A.DEPT_CODE = B.DEPT_CODE
          AND FN_GETCLSF(A.CLSF_CODE) = C.CODE_NM
          AND A.EMP_NO = D.EMP_NO(+)
          AND (A.DEPT_CODE = #{dept} OR A.DEPT_CODE = #{team})
          AND RETIRE_DE IS NULL
        ORDER BY CLSF_CODE, A.EMP_NO
	</select>
	
	<!--  관리자 근태관리 부서 직원목록 구분 결과 수  -->
	<select id="dclzSelectByDeptCount" resultType="int" parameterType="hashMap">
		SELECT 
	        count(*)
        FROM EMP A, DEPT B, CMMNCODE C
        WHERE 1=1
          AND A.DEPT_CODE = B.DEPT_CODE
          AND FN_GETCLSF(A.CLSF_CODE) = C.CODE_NM
          AND (A.DEPT_CODE = #{dept} OR A.DEPT_CODE = #{team})
          AND RETIRE_DE IS NULL
        ORDER BY CLSF_CODE, A.EMP_NO
	</select>
	
	<!-- 휴가관리 부서 직원목록 전체조회 -->
	<select id="vcatnSelectByAll" resultType="hashMap">
		SELECT 
            ROW_NUMBER() OVER (ORDER BY CLSF_CODE, A.EMP_NO) AS RNUM,
            A.EMP_NO EMP_NO,
            B.DEPT_NM DEPT_NM,
            A.EMP_NM EMP_NM,
            FN_GETCLSF(A.CLSF_CODE) CLSF,
               D.OCCRRNC_DAYCNT,
               D.USE_DAYCNT,
               D.REMNDR_DAYCNT,
            ENCPN_DE
        FROM EMP A, DEPT B, CMMNCODE C, YRYC D
        WHERE 1=1
          AND A.DEPT_CODE = B.DEPT_CODE
          AND FN_GETCLSF(A.CLSF_CODE) = C.CODE_NM
             AND A.EMP_NO = D.EMP_NO(+)
          AND RETIRE_DE IS NULL
        ORDER BY CLSF_CODE, A.EMP_NO
	</select>
	
	<!-- 휴가관리 연차 일괄등록 -->
	<insert id="insertVcatnAdmin" parameterType="hashMap">
		<selectKey order="BEFORE" resultType="int" keyProperty="yrycSn">
 			SELECT NVL(MAX(TO_NUMBER(YRYC_SN)),0)+1 FROM YRYC
 		</selectKey>
 		INSERT INTO YRYC
 			(YRYC_SN,OCCRRNC_YEAR, OCCRRNC_DAYCNT,USE_DAYCNT,REMNDR_DAYCNT,EMP_NO)
		VALUES(#{yrycSn},#{occrrncYear},#{occrrncDaycnt},0,#{occrrncDaycnt},#{empNo})
	</insert>
	
	<!-- 전체 조회 결과 수 -->
	<select id="vcatnaminCount" parameterType="String" resultType="int">
		SELECT 
		COUNT(*)
		FROM EMP A, DEPT B, CMMNCODE C, YRYC D
		WHERE 1=1
		  AND OCCRRNC_YEAR = #{currentYear}
		  AND A.DEPT_CODE = B.DEPT_CODE
		  AND FN_GETCLSF(A.CLSF_CODE) = C.CODE_NM
		  AND A.EMP_NO = D.EMP_NO(+)
		  AND RETIRE_DE IS NULL
		ORDER BY CLSF_CODE, A.EMP_NO
	</select>
	
	<!-- 전 직원 정보 조회 (재직자)-->
	<select id="selectAllemp" resultType="hashMap" >
		SELECT A.EMP_NO,
	       A.EMP_NM,
	       B.DEPT_NM 
		FROM EMP A, DEPT B
		WHERE 1=1 
		    AND A.dept_code = B.dept_code
		    AND RETIRE_DE IS NULL
		ORDER BY EMP_NO
	</select>
	
	<!-- 재직자 직원 정보 조회 결과수  -->
	<select id="selectAllempCount" resultType="int">
		SELECT count(*)
		FROM EMP A, DEPT B
		WHERE 1=1 
		    AND A.dept_code = B.dept_code
		    AND RETIRE_DE IS NULL
	</select>
	
	<!-- 직원별 근무형태 코드 조회 -->
	<select id="selectWorkStle" parameterType="hashMap" resultType="hashMap">
		SELECT WORK_DE,WORK_STLE_CODE 
		FROM DCLZ
		WHERE SUBSTR(WORK_DE,1,7)=#{searchMonth}
		AND EMP_NO=#{empNo}
	</select>
	
	<!-- 출근 기록 수 조회  -->
	<select id="commitCount" parameterType="hashMap" resultType="int">
		SELECT COUNT(*) 
		FROM DCLZ
		WHERE EMP_NO=#{empNo}
		AND WORK_DE=#{workDe}
	</select>
	
	<!-- 출근 기록 조회  -->
	<select id="commitYn" parameterType="hashMap" resultType="hashMap">
		SELECT DCLZ_SN
		FROM DCLZ
		WHERE EMP_NO=#{empNo}
		AND WORK_DE=#{workDe}
	</select>
	
	<!-- 전자결재 양식 코드번호 조회 -->
	<select id="searchSanctnSn" parameterType="int" resultType="String">
    	SELECT SANCTN_FORM_CODE 
		FROM ELCTRNSANCTN
		WHERE ELCTRN_SANCTN_SN=#{elctrnSanctnSn}
	</select>
	
	<!-- 전자결재 상신 후 휴가 테이블 업데이트 -->
	<update id="updateVcatn" parameterType="hashMap">
		UPDATE VCATN
 		SET 
 			SANCTN_YN = 'Y',
 			ELCTRN_SANCTN_SN= #{elctrnSanctnSn},
 			REQST_DE = SYSDATE
 		WHERE VCATN_SN = #{vcatnSn}
	</update>
	
	<!-- 전자결재 상신 후 출장 테이블 업데이트 -->
	<update id="updateBsrp" parameterType="hashMap">
		UPDATE BSRP
 		SET 
 			SANCTN_YN = 'Y',
 			ELCTRN_SANCTN_SN = #{elctrnSanctnSn},
 			REQST_DE = SYSDATE
 		WHERE BSRP_SN = #{bsrpSn}
	</update>
	
	<!-- 사용 휴가 일수와 휴가 구분 코드 조회 -->
	<select id="vcatnDaynCode" parameterType="int" resultType="hashMap">
		SELECT VCATN_REQST_DAYCNT,VCATN_SE_CODE,BGN_DE,END_DE
		FROM VCATN
		WHERE ELCTRN_SANCTN_SN= #{elctrnSanctnSn}
	</select>
	
	<!-- 출장 시작 종료일 조회 -->
	<select id="bsrpDaynCode" parameterType="int" resultType="hashMap">
		SELECT BGN_DE,END_DE
		FROM BSRP
		WHERE ELCTRN_SANCTN_SN= #{elctrnSanctnSn}
	</select>
	
	<!-- 연차 휴가 개수 업데이트  -->
	<update id="yrycUpdate" parameterType="hashMap">
	 UPDATE YRYC
	 SET
 	  USE_DAYCNT = #{useDaycnt},
 	  REMNDR_DAYCNT = #{remnrDaycnt}
	 WHERE
	  OCCRRNC_YEAR = #{occrrncYear}
	  AND EMP_NO = #{empNo}
	</update>
	
	<!-- 휴일 목록 조회 (주현) --> 
   	<select id="restDeList2" parameterType="string" resultType="String">
      SELECT A.RESTDE_DE
      FROM RESTDE A, CMMNCODE B
      WHERE A.RESTDE_SE_CODE = B.CODE 
            AND A.RESTDE_DE = #{restdeDe}
      ORDER BY RESTDE_DE ASC
   	</select>
    
    <!-- 전자결재 상태 조회 -->
	<select id="elctrnSanState" parameterType="int" resultType="hashMap">
	SELECT A.STCODE, B.LAST_STTUS_CODE
	FROM ELCTRNSANCTN B, 
	    (SELECT SANCTN_STTUS_CODE AS STCODE ,ELCTRN_SANCTN_SN AS SANCTNSN
	       FROM SANCTNLINE
	      WHERE ELCTRN_SANCTN_SN = #{elctrnSanctnSn}
	        AND STEP ='2') A 
	WHERE 1=1
	AND A.SANCTNSN = B.ELCTRN_SANCTN_SN(+)
	AND ELCTRN_SANCTN_SN = #{elctrnSanctnSn}
	</select>
	
	<!-- 시작일 종료일 사이의 날짜 구하기  -->
	<select id="daySearch" parameterType="hashMap" resultType="hashMap">
	<![CDATA[
	SELECT TO_CHAR(TO_DATE(#{BGN_DE}, 'YYYY-MM-DD') + NUM-1, 'YYYY-MM-DD') AS DAY
	FROM (
	 SELECT ROWNUM NUM 
	 FROM DICTIONARY
	 WHERE ROWNUM <= TO_DATE(#{END_DE}, 'YYYY-MM-DD') - TO_DATE(#{BGN_DE}, 'YYYY-MM-DD')+ 1)
	]]>
	</select>
	
	<!-- 전자결재 후 근태내역 코드 변경  -->
	<update id="afterSanction" parameterType="hashMap">
	UPDATE DCLZ
	SET 
		WORK_STLE_CODE = #{workStleCode}
	WHERE WORK_DE = #{workDe}
	AND EMP_NO = #{empNo}
	</update>
	
	<!--  전자결재 후 근태내역 코드 등록 -->
	<insert id="afterSanctionInsert" parameterType="hashMap">
	INSERT INTO DCLZ
    	(DCLZ_SN, WORK_DE, WORK_STLE_CODE, EMP_NO)
	VALUES((SELECT NVL(MAX(TO_NUMBER(DCLZ_SN)),0)+1 FROM DCLZ),#{workDe},#{workStleCode}, #{empNo})  
	</insert>
</mapper>